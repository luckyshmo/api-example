# This file is a template, and might need editing before it works on your project.
image: golang:1.16.2-alpine

variables:
  # Please edit to your GitLab project
  REPO_NAME: gitlab.sgaz.pro/edu/api-example

# The problem is that to be able to use go get, one needs to put
# the repository in the $GOPATH. So for example if your gitlab domain
# is gitlab.com, and that your repository is namespace/project, and
# the default GOPATH being /go, then you'd need to have your
# repository in /go/src/gitlab.com/namespace/project
# Thus, making a symbolic link corrects this.
before_script:
  - mkdir -p $GOPATH/src/$(dirname $REPO_NAME)
  - ln -svf $CI_PROJECT_DIR $GOPATH/src/$REPO_NAME
  - cd $GOPATH/src/$REPO_NAME

stages:
  - test
  - bin-build
  - image-build
  - deploy

#fmt format all code
#vet examines Go source code and reports suspicious constructs
#test run test with race detection
Format and tests:
  stage: test
  script:
    - apk add build-base
    - go fmt $(go list ./... | grep -v /vendor/) 
    - go vet $(go list ./... | grep -v /vendor/)
    - go test -race $(go list ./... | grep -v /vendor/)
  # rules:
  #   - when: manual
    
Compile bin:
  stage: bin-build
  script:
    - go build -o api-example ./cmd/main.go
  artifacts:
    paths:
      - api-example
      - ./pkg/repository/pg/migrations
      - wait-for-postgres.sh
      - DockerfileCI
  # rules:
  #   - when: always
  # needs: []

Build docker image:
  stage: image-build
  tags:
    - docker-20.10.2-dind
  services:
    - docker:20.10.2-dind
  image: docker:20.10.2
  variables: 
    GIT_STRATEGY : none #no need to involve git, only use ready artifacts
  dependencies:
    - Compile bin
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA -f ./DockerfileCI .
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:latest
